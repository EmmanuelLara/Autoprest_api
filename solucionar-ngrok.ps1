# Script para solucionar problemas de ngrok autom√°ticamente

Write-Host "üîß Solucionando problemas de ngrok..." -ForegroundColor Green

# Verificar si el servidor est√° corriendo
$serverRunning = netstat -ano | findstr :3000
if (-not $serverRunning) {
    Write-Host "‚ùå El servidor no est√° corriendo en el puerto 3000" -ForegroundColor Red
    Write-Host "üí° Ejecuta 'npm start' primero" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Servidor detectado en puerto 3000" -ForegroundColor Green

# Verificar si ngrok est√° instalado
try {
    $ngrokVersion = ngrok version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Ngrok detectado: $ngrokVersion" -ForegroundColor Green
    } else {
        throw "Ngrok no encontrado"
    }
} catch {
    Write-Host "‚ùå Ngrok no est√° instalado" -ForegroundColor Red
    Write-Host "üîÑ Instalando ngrok autom√°ticamente..." -ForegroundColor Yellow
    
    try {
        winget install ngrok.ngrok --accept-source-agreements --accept-package-agreements
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Ngrok instalado exitosamente" -ForegroundColor Green
            # Refrescar PATH
            $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        } else {
            throw "Error en la instalaci√≥n"
        }
    } catch {
        Write-Host "‚ùå Error al instalar ngrok autom√°ticamente" -ForegroundColor Red
        Write-Host "üí° Instalaci√≥n manual:" -ForegroundColor Yellow
        Write-Host "   1. Ve a https://ngrok.com/download" -ForegroundColor Cyan
        Write-Host "   2. Descarga e instala ngrok" -ForegroundColor Cyan
        Write-Host "   3. Vuelve a ejecutar este script" -ForegroundColor Cyan
        exit 1
    }
}

# Verificar instalaci√≥n
try {
    $ngrokVersion = ngrok version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Ngrok funcionando correctamente" -ForegroundColor Green
    } else {
        throw "Ngrok no funciona despu√©s de la instalaci√≥n"
    }
} catch {
    Write-Host "‚ùå Error al verificar ngrok: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Verificar si hay un token configurado
$ngrokConfig = Get-Content "$env:USERPROFILE\.ngrok2\ngrok.yml" -ErrorAction SilentlyContinue
if (-not $ngrokConfig) {
    Write-Host "‚ö†Ô∏è  Ngrok no est√° configurado con un token" -ForegroundColor Yellow
    Write-Host "üí° Para mejor experiencia (sesiones m√°s largas):" -ForegroundColor Yellow
    Write-Host "   1. Ve a https://ngrok.com/ y crea una cuenta gratuita" -ForegroundColor Cyan
    Write-Host "   2. Obt√©n tu authtoken desde el dashboard" -ForegroundColor Cyan
    Write-Host "   3. Ejecuta: ngrok config add-authtoken TU_TOKEN" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üîÑ Continuando sin token (sesi√≥n limitada a 2 horas)..." -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Ngrok est√° configurado con token" -ForegroundColor Green
}

# Detener cualquier proceso ngrok existente
Write-Host "üõë Deteniendo procesos ngrok existentes..." -ForegroundColor Yellow
Get-Process -Name "ngrok" -ErrorAction SilentlyContinue | Stop-Process -Force

Write-Host ""
Write-Host "üåê Iniciando t√∫nel ngrok..." -ForegroundColor Green
Write-Host "üìä Panel de control: http://localhost:4040" -ForegroundColor Cyan
Write-Host "‚èπÔ∏è  Para detener: Ctrl+C" -ForegroundColor Yellow
Write-Host ""

# Iniciar ngrok
try {
    ngrok http 3000 --log=stdout
} catch {
    Write-Host "‚ùå Error al iniciar ngrok: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}
